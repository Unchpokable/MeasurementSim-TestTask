#include "AddCommentCommand.h"

#include <QMessageBox>
#include "Formats.h"
#include "CommentCommand.h"

AddCommentCommand::AddCommentCommand(QWidget *parent, RuntimeContext* context)
    : QDialog(parent), AddCommandBase(context)
    , ui(new Ui::AddCommentCommandClass())
{
    ui->setupUi(this);

    connect(ui->acceptButton, &QPushButton::clicked, this, [this]() {
        ConstructCommandObject();
    });
}

AddCommentCommand::~AddCommentCommand()
{
    delete ui;
}

void AddCommentCommand::ConstructCommandObject()
{
    const auto msg_text = ui->commentInput->toPlainText();

    if(msg_text.size() == 0) 
    {
        QMessageBox::warning(this, QString("Incorrect input"), QString("Comment can not be empty"));
        return;
    }

    const std::vector<double> d_dummy {};
    const std::vector<ContextObject*> obj_dummy {};

    const auto command = new CommentCommand("Comment_autogenerated<" + RandomString(3) + ">", 
        msg_text, ui->checkBox->checkState() == Qt::Checked);
    m_constructed_command = new BoundCommand(m_runtime_context, command, d_dummy, obj_dummy);
    close();
}

